# This pipeline is used in the tests process.
# You can read each description to understand what each methods do
#

desc "Run tests"
lane :run_tests_pipeline do
    pod_install
    lint
    unit_tests
    coverage
    sonnar_coverage
    sonar_scanner
    screenshots
end

desc "Install cocoapods dependencies"
lane :pod_install do
    cocoapods(podfile: "./EmeraldComponents")
    cocoapods(podfile: "./EmeraldComponentsApp/EmeraldComponentsApp")
end

desc "Run swiftlint"
lane :lint do
    swiftlint(
        mode: :lint,
        output_file: "swiftlint.result.json",
        reporter: "json",
        config_file: ".swiftlint-ci.yml",
        ignore_exit_status: false
    )
end

desc "Run Unit Tests"
lane :unit_tests do        
    scan(   
        scheme: "EmeraldComponents", 
        devices: ["iPhone 8", "iPhone X"],
        code_coverage: true,
        clean: true,
        derived_data_path: "./fastlane/DerivedData"
    )
end

desc "Get coverage percentage, remove framework's coverage"
lane :coverage do 
    xcov(
        workspace: "EmeraldComponents.xcworkspace",
        scheme: "EmeraldComponents",
        output_directory: "xcov_output",
        exclude_targets: "JTAppleCalendar.framework, 
                          EmeraldComponentsApp.app,
                          InputMask.framework",
        minimum_coverage_percentage: 80.0,
        derived_data_path: "./fastlane/DerivedData"
    )
end

desc "Run UITests and get screenshots"
lane :screenshots do
    capture_screenshots
end

desc "Convert xccov to xml"
lane :sonnar_coverage do
    sh "chmod +x xccov-to-sonarqube-generic.sh"
    sh "xccov-to-sonarqube-generic.sh DerivedData/Logs/Test/*.xcresult/*_Test/action.xccovarchive/ > sonarqube-generic-coverage.xml"
end


desc "Run SonarQube analysis"
lane :sonar_scanner do
    sonar(
        sonar_login: ENV["SONARQUBE_TOKEN"],
        project_configuration_path: "sonar-project.properties"
    )
end
